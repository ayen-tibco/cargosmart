# Ansible AWS profile properties config
# 
# Tibco settings goes first
# Tibco SB install settings
CLOUD_PROVIDER=aws
TIBCO_INSTALL_DIR=/opt/tibco
# don't use 10.0.0-snapshot
#SB_CEP_VERSION=${sb.version}
SB_CEP_VERSION=10
STREAMBASE_HOME=${TIBCO_INSTALL_DIR}/sb-cep/${SB_CEP_VERSION}
REMOTE_TIBCO_EP_HOME=${STREAMBASE_HOME}
TIBCO_EP_BIN=${REMOTE_TIBCO_EP_HOME}/distrib/tibco/bin
NODE_INSTALL_DIR=${TIBCO_INSTALL_DIR}/nodes
SB_TARBALL=platform_linux${DOCKER_SB_ARCH}.zip

# Tibco SB App deploy and configuration
CLUSTERNAME=topologies
# use s3 to save bandwidth i.e https://bucketname.s3.amazonaws.com
SB_TARBALL_URL=
SB_APP_NAME=topologies
SB_APP_FILE=${SB_APP_NAME}-${project.version}.zip
SB_APP_DIR=${TIBCO_INSTALL_DIR}/${SB_APP_NAME}
SB_APP_FILE_URL=${project.build.directory}/staging/ansible/${CLOUD_PROVIDER}
NODE_CONFIG=two-node-active-active-node.conf
# ansible remote copy-this is the local source dir
NODE_CONFIG_URL=${project.build.directory}/staging/ansible/${CLOUD_PROVIDER}
SUBSTITUTIONS=GOLDYLOCKS_EPPORT=10000,A1_IPADDR=${A1_NODENAME},A2_IPADDR=${A2_NODENAME},A3_IPADDR=${A3_NODENAME}
DEPLOYDIR=${STREAMBASE_HOME}/lib:${SB_APP_DIR}/java-bin:/vagrant
SB_ADMIN_PORT=5556
# used for VM instance naming and hostnames
NODENAME_PREFIX=A
nodename1=A1
nodename2=A2
nodename3=A3
A1_NODENAME=${nodename1}.${CLUSTERNAME}
A2_NODENAME=${nodename2}.${CLUSTERNAME}
A3_NODENAME=${nodename3}.${CLUSTERNAME}
BUILDTYPE=DEVELOPMENT

# node and instance configs
NODE_COUNT=1
INSTANCE_COUNT=2

# aws credentials
AWS_ACCESS_KEY_ID='abc'
AWS_SECRET_ACCESS_KEY='abcd'
# aws settings
IMAGE_ID=ami-72667b65
SSH_KEY_NAME=ec2_dtmtest
REGIONS=us-east-1
AVAIL_ZONE=us-east-1b
SECURITY_GROUPS=sg-9900b7e2
SUBNET_ID=subnet-81b290bc
INSTANCE_TYPE=m3.large

# docker settings
# deploy SB via Docker
DOCKERDEPLOY=true
SB_DOCKER_IMAGE=
SB_DOCKER_IMAGE_TAG=latest
DOCKER_REGISTRY=docker.io
DOCKER_REGISTRY_USERNAME=
DOCKER_REGISTRY_PASSWORD=
DOCKER_REGISTRY_AUTH=
DOCKER_REGISTRY_EMAIL=

# ansible settings
ANSIBLE_TAGS=prep,install,docker,deploy
ANSIBLE_PLAYBOOK=ansible/${CLOUD_PROVIDER}/playbooks/topologies.yml
ANSIBLE_REMOTE_USER=ec2-user
ANSIBLE_HOST_GROUP=tag_ClusterName_${CLUSTERNAME}
EC2_INI_PATH=./target/ansible/${CLOUD_PROVIDER}/ec2.ini
