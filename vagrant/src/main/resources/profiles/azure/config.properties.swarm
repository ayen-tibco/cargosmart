# config.properties for Vagrant/Azure
# Tibco settings goes first
# Tibco SB install settings
VAGRANT_PROVIDER=azure
TIBCO_INSTALL_DIR=/opt/tibco
# don't use 10.0.0-snapshot
#SB_CEP_VERSION=${sb.version}
SB_CEP_VERSION=10
STREAMBASE_HOME=${TIBCO_INSTALL_DIR}/sb-cep/${SB_CEP_VERSION}
REMOTE_TIBCO_EP_HOME=${STREAMBASE_HOME}
TIBCO_EP_BIN=${REMOTE_TIBCO_EP_HOME}/distrib/tibco/bin
NODE_INSTALL_DIR=${TIBCO_INSTALL_DIR}/nodes
SB_TARBALL=platform_linuxx86_64.zip

# Tibco SB App deploy and configuration
CLUSTERNAME=partition
# use s3 to save bandwidth
SB_TARBALL_URL=https://sbqa.s3.amazonaws.com
SB_APP_NAME=partitioning-application
SB_APP_FILE=partitioning-application-1.0.0-SNAPSHOT.zip
SB_APP_DIR=${TIBCO_INSTALL_DIR}/${SB_APP_NAME}
SB_APP_FILE_URL=${project.build.directory}/staging/${VAGRANT_PROVIDER}/app
NODE_CONFIG=three-node-static-proxy-azure-node.conf
# ansible remote copy-this is the local source dir
NODE_CONFIG_URL=${project.build.directory}/staging/${VAGRANT_PROVIDER}/app
DEPLOYDIR=${STREAMBASE_HOME}/lib:${SB_APP_DIR}/java-bin:/vagrant
SB_ADMIN_PORT=5556
# used for VM instance naming and hostnames
NODENAME_PREFIX=oocl-
A1_NODENAME=A.partition
A2_NODENAME=B.partition
A3_NODENAME=C.partition
nodename1=A.partition
nodename2=B.partition
nodename3=C.partition
BUILDTYPE=PRODUCTION
#SUBSTITUTIONS=A1_NODENAME=A.partition,A2_NODENAME=B.partition,A3_NODENAME=C.partition,A1_IPADDR=A.partition,A2_IPADDR=B.partition,A3_IPADDR=C.partition
SUBSTITUTIONS=

# node and instance configs
NODE_COUNT=1
INSTANCE_COUNT=3

# vagrant settings
VAGRANT_PROVISIONER=ansible
VAGRANT_LOG=warn
VAGRANT_REMOTE_USER=vagrant

# azure credentials
# AD method
# principal method
AZURE_PORTS=['5556-5558','10000']
AZURE_SUBSCRIPTION_ID=59fd09c2-9932-4975-8042-f048c202ba62
AZURE_CLIENT_ID=5096c99e-1d11-4b88-a55f-643aa283c00f
AZURE_SECRET=7c313c03-4653-482e-ab75-7a99de1ae197
AZURE_TENANT=cde6fa59-abb3-4971-be01-2443c417cbda

# azure settings
IMAGE_ID=CentOS
IMAGE_PUBLISHER=OpenLogic
IMAGE_SKU=7.4
IMAGE_VERSION=latest
SSH_KEY_NAME=vagrant_private.key
REGIONS=eastus
RESOURCE_GROUP=ooclswarm
# use default template instance type D2v2 faster CPUs (2cores 7GB RAM)
# instead of Standard_A3 (4 cores and 7GB RAM)
# also template set to default PREMIUM Storage so much use D2
INSTANCE_TYPE=Standard_DS2_v2
VIRTUAL_NETWORK_NAME=${RESOURCE_GROUP}_vn
SUBNET_NAME=${RESOURCE_GROUP}_subnet

# docker settings
# deploy SB via Docker
DOCKERDEPLOY=true
SB_DOCKER_IMAGE=ayentibco/partition_docker
SB_DOCKER_IMAGE_TAG=latest
DOCKER_REGISTRY=docker.io
DOCKER_REGISTRY_USERNAME=ayentibco
DOCKER_REGISTRY_PASSWORD=T!bco2016
DOCKER_REGISTRY_AUTH=
DOCKER_REGISTRY_EMAIL=ayen@tibco.com

# ansible settings
ANSIBLE_TAGS=prep,install,deploy,docker,swarm
ANSIBLE_PLAYBOOK=ansible/playbooks/topologies.yml
ANSIBLE_REMOTE_USER=vagrant
ANSIBLE_HOST_GROUP=tag_ClusterName_${CLUSTERNAME}
ANSIBLE_EXTRA_VARS={DONOTLEAVEBLANK: "OK"}

# puppet settings
PUPPET_SERVER=A.partition
PUPPET_ENV=production
PUPPET_MANIFEST_FILE=site.pp
PUPPET_OPS="--verbose --debug"
PUPPET_DOMAIN=${CLUSTERNAME}

